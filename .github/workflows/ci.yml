name: CI

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache-pip
        uses: actions/cache@v3
        env:
          cache-name: cache-pip
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-venv-

      - name: Set up Python
        if: steps.cache-pip.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: "pip"
      - name: Setup uv
        uses: yezz123/setup-uv@v4
        with:
          uv-venv: "venv"
      - name: Run Ruff
        run: uv run ruff check --output-format=github .

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache-pip
        uses: actions/cache@v3
        env:
          cache-name: cache-pip
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-venv-

      - name: Set up Python
        if: steps.cache-pip.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: "pip"
      - uses: yezz123/setup-uv@v4
        with:
          uv-venv: "venv"
      - name: Test with pytest
        run: |
          uv run pytest

  sonarcloud:
    needs: [unit-tests, lint]
    name: SonarQube Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
